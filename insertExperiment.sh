
#--------Usage in Ubuntu---------
#chmod +x insertExperiment.sh - Once
#dos2unix insertExperiment.sh - Once
#bash insertExperiment.sh

# Configuration
IP="127.0.0.1"
BASE_PORT=5000
NODE_COUNT=10
INSERT_PATH="./data/insert"
EXPERIMENTS=(1 3 5) # k values
CONSISTENCIES=("linearizability" "eventual")

# Function to start nodes
start_nodes() {
    echo "Starting bootstrap node..." | tee -a insertLog_0.txt
    bash -c "python3 node.py $IP $BASE_PORT $1 | tee insertLog_0.txt &" &
    sleep 2
    
    for ((i=1; i<$NODE_COUNT; i++)); do
        port=$((BASE_PORT + i))
        echo "Starting node $i on port $port..." | tee -a insertLog_${i}.txt
        bash -c "python3 node.py $IP $port $IP $BASE_PORT | tee insertLog_${i}.txt &" &
        sleep 2
    done
    
    # Wait for all nodes to be fully initialized
    echo "Waiting for all nodes to be fully initialized..."
    for ((i=0; i<$NODE_COUNT; i++)); do
        port=$((BASE_PORT + i))
        while ! nc -z 127.0.0.1 $port; do sleep 1; done
        echo "Node on port $port is now active."
    done
}

# Function to execute inserts
#execute_inserts() {
#    local k=$1
#    local consistency=$2
#    
#    echo "Running inserts with k=$k and consistency=$consistency" | tee -a insertResults.csv
#    start_time=$(date +%s.%N)
#    
#    for ((i=0; i<$NODE_COUNT; i++)); do
#        port=$((BASE_PORT + i))
#        file="$INSERT_PATH/insert_0${i}_part.txt"
#        echo "Inserting data from $file to node $i on port $port..." | tee -a insertLog_${i}.txt
#        bash -c "while read -r line; do python3 testClient.py insert \"$line\" | tee -a insertLog_${i}.txt; done < $file &" &
#    done
#    
#    wait
#    end_time=$(date +%s.%N)
#    duration=$(echo "$end_time - $start_time" | bc)
#    echo "Write throughput for k=$k, consistency=$consistency: $duration seconds" | tee -a insertResults.csv
#    echo "$k,$consistency,$duration" >> insertResults.csv
#}
execute_inserts() {
    local k=$1
    local consistency=$2

    echo "Running inserts with k=$k and consistency=$consistency" | tee -a insertResults.csv
    start_time=$(date +%s.%N)

    for ((i=0; i<$NODE_COUNT; i++)); do
        port=$((BASE_PORT + i))
        file="$INSERT_PATH/insert_0${i}_part.txt"
        echo "Inserting data from $file to node $i on port $port..." | tee -a insertLog_${i}.txt

        while read -r line; do
            echo "Inserting key: '$line' (value auto-generated by node.py)" | tee -a insertLog_${i}.txt
            python3 testClient.py insert "$line" | tee -a insertLog_${i}.txt
        done < "$file" &
    done

    wait
    end_time=$(date +%s.%N)
    duration=$(echo "$end_time - $start_time" | bc)
    echo "Write throughput for k=$k, consistency=$consistency: $duration seconds" | tee -a insertResults.csv
    echo "$k,$consistency,$duration" >> insertResults.csv
}


# Main execution
rm -f insertResults.csv
rm -f insertLog_*.txt
echo "k,consistency,time" > insertResults.csv

for k in "${EXPERIMENTS[@]}"; do
    for consistency in "${CONSISTENCIES[@]}"; do
        start_nodes "$k"
        sleep 5
        execute_inserts "$k" "$consistency"
        echo "Experiment with k=$k and consistency=$consistency completed." | tee -a insertResults.csv
        pkill -f node.py
        sleep 5
    done
done

echo "All experiments completed. Results saved in insertResults.csv." | tee -a insertResults.csv
